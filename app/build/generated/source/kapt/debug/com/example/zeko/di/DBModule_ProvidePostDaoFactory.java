// Generated by Dagger (https://dagger.dev).
package com.example.zeko.di;

import com.example.zeko.data.db.PostDao;
import com.example.zeko.data.db.ZekoDB;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DBModule_ProvidePostDaoFactory implements Factory<PostDao> {
  private final DBModule module;

  private final Provider<ZekoDB> zekoDBProvider;

  public DBModule_ProvidePostDaoFactory(DBModule module, Provider<ZekoDB> zekoDBProvider) {
    this.module = module;
    this.zekoDBProvider = zekoDBProvider;
  }

  @Override
  public PostDao get() {
    return providePostDao(module, zekoDBProvider.get());
  }

  public static DBModule_ProvidePostDaoFactory create(DBModule module,
      Provider<ZekoDB> zekoDBProvider) {
    return new DBModule_ProvidePostDaoFactory(module, zekoDBProvider);
  }

  public static PostDao providePostDao(DBModule instance, ZekoDB zekoDB) {
    return Preconditions.checkNotNullFromProvides(instance.providePostDao(zekoDB));
  }
}
